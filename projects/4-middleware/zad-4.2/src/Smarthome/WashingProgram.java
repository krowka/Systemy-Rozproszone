//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.3
//
// <auto-generated>
//
// Generated from file `smarthome.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Smarthome;

public class WashingProgram implements java.lang.Cloneable,
                                       java.io.Serializable
{
    public float temperature;

    public TimeOfDay startTime;

    public WashingProgram()
    {
        this.startTime = new TimeOfDay();
    }

    public WashingProgram(float temperature, TimeOfDay startTime)
    {
        this.temperature = temperature;
        this.startTime = startTime;
    }

    public boolean equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        WashingProgram r = null;
        if(rhs instanceof WashingProgram)
        {
            r = (WashingProgram)rhs;
        }

        if(r != null)
        {
            if(this.temperature != r.temperature)
            {
                return false;
            }
            if(this.startTime != r.startTime)
            {
                if(this.startTime == null || r.startTime == null || !this.startTime.equals(r.startTime))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int hashCode()
    {
        int h_ = 5381;
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, "::Smarthome::WashingProgram");
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, temperature);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, startTime);
        return h_;
    }

    public WashingProgram clone()
    {
        WashingProgram c = null;
        try
        {
            c = (WashingProgram)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void ice_writeMembers(com.zeroc.Ice.OutputStream ostr)
    {
        ostr.writeFloat(this.temperature);
        TimeOfDay.ice_write(ostr, this.startTime);
    }

    public void ice_readMembers(com.zeroc.Ice.InputStream istr)
    {
        this.temperature = istr.readFloat();
        this.startTime = TimeOfDay.ice_read(istr);
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, WashingProgram v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public WashingProgram ice_read(com.zeroc.Ice.InputStream istr)
    {
        WashingProgram v = new WashingProgram();
        v.ice_readMembers(istr);
        return v;
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<WashingProgram> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, WashingProgram v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.VSize))
        {
            ostr.writeSize(10);
            ice_write(ostr, v);
        }
    }

    static public java.util.Optional<WashingProgram> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.VSize))
        {
            istr.skipSize();
            return java.util.Optional.of(WashingProgram.ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static final WashingProgram _nullMarshalValue = new WashingProgram();

    /** @hidden */
    public static final long serialVersionUID = -672478115L;
}
